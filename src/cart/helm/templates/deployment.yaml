apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "this.fullname" . }}
  labels:
    {{- include "this.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "this.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "this.selectorLabels" . | nindent 8 }}
        azure.workload.identity/use: "true"
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.secrets.serviceAccountName }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            periodSeconds: 5
            timeoutSeconds: 5
            httpGet:
              path: /health/liveness
              port: http
          readinessProbe:
            periodSeconds: 15
            timeoutSeconds: 5
            httpGet:
              path: /health/readiness
              port: http
          startupProbe:
            periodSeconds: 5
            failureThreshold: 30
            tcpSocket:
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
          env:
            - name: REDIS_HOST
              value: {{ .Values.databases.redis.host | quote }}
            - name: REDIS_PORT
              value: {{ .Values.databases.redis.port | quote }}
            - name: REDIS_USERNAME
              value: {{ .Values.databases.redis.username | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "this.fullname" . }}
                  key: redis-password
            - name: REDIS_DB
              value: {{ .Values.databases.redis.db | quote }}
            - name: COSMOS_DB_URI
              value: {{ .Values.databases.cosmosdb.uri | quote }}
            - name: APPLICATIONINSIGHTS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "this.fullname" . }}
                  key: applicationinsights-connection-string
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 10Mi
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "this.fullname" . }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
